#!/bin/bash
rw=`dirname $0` 
cd $rw 
ROOT_DIR=`pwd`
APP=`basename $ROOT_DIR`

function usage(){
    echo -e "Usage of serverctl:" 
    echo -e "如 ./serverctl -r dev -f -s start"
    echo -e "  -s string"
    echo -e "         required"
    echo -e "         start|stop|restart"
    echo -e "  -r string"
    echo -e "         optional"
    echo -e "         项目运行模式, 如test|dev, 默认为prod"
    echo -e "  -f"
    echo -e "         optional"
    echo -e "         是否强制启动，忽略pid文件"
    exit 1
}

#运行模式(prod|dev|...)
mode=""

#是否强制启动,会忽略pid文件的存在, 适合程序异常退出后的重启,或者机器重启的场景
force_start=false

#start|stop|restart
cmd=""

while getopts "r:fs:h*" Option
do
    case $Option in
        r) 
            mode=$OPTARG
        ;;
        f)
            force_start=true
        ;;
        s)
            cmd=$OPTARG
        ;;
        h) 
            usage
        ;;
    esac
done

if [ "$mode" == "" ]; then
    mode="prod"
fi

if [ "$cmd" != "start" -a "$cmd" != "stop" -a "$cmd" != "restart" ]; then
    usage
fi

#程序启动后会将pid写入bin文件统计目录下
wait_for_pid () {
    try=0
    sleep 1
    while test $try -lt 15 ; do
        if [ -f "$1" ] ; then
            return 0
        fi

        echo -n .
        try=`expr $try + 1`
        sleep 1

    done
    return 1
}

case "$cmd" in
    start)
        echo "starting...."
        if [ -s $ROOT_DIR/bin/pid ]
        then
            if [ ${force_start} ]
            then
                echo "ignore existed pid file"
                rm -rf $ROOT_DIR/bin/pid
            else
                echo "pid file already exist"
                exit 1
            fi
        fi

        export GOGC=200
        nohup $ROOT_DIR/bin/$APP -b $ROOT_DIR -r $mode 1>>$ROOT_DIR/logs/run.log 2>>$ROOT_DIR/logs/run.log &
        wait_for_pid $ROOT_DIR/bin/pid
        if [ 0 != $? ] 
        then
            echo "failed, please refer to logs/run.log for more detail"
            exit 1
        else
            echo "done"
        fi
        ;;

    stop)
        echo "stopping...."
        kill -9 `cat $ROOT_DIR/bin/pid`
        if [ 0 != $? ]
        then
            echo "failed"
            exit 1
        else
            rm -rf $ROOT_DIR/bin/pid
            echo "done"
        fi
        ;;

    restart)
        sh $0 stop
        echo "To start session in 2 seconds later..."
        sleep 2
        sh $0 start
        if [ $? != 0 ]
        then
            echo "failed"
            exit 1
        fi     
        ;;

    *)
        usage
        ;;
esac

exit 0

