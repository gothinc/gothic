#!/bin/bash
rw=`dirname $0` 
cd $rw 
ROOT_DIR=`pwd`
APP=`basename $ROOT_DIR`

function usage(){
    echo -e "Usage of serverctl [option] start|stop|restart:" 
    echo -e "如 ./serverctl -r dev start"
    echo -e "  -r string"
    echo -e "         optional"
    echo -e "         项目运行模式, 如test|dev, 默认为prod"
    exit 1
}

mode="prod"
while getopts "r:h*" Option
do
    case $Option in
        r) mode=$OPTARG
        ;;
        h) usage
        ;;
    esac
done

wait_for_pid () {
    try=0
    #先sleep1秒, 防止启动后马上又出错退出的情况
    sleep 1
    while test $try -lt 15 ; do
        if [ -f "$1" ] ; then
            return 0
        fi

        echo -n .
        try=`expr $try + 1`
        sleep 1

    done
    return 1
}

case "$1" in
    start)
        echo "starting...."
        if [ -s $ROOT_DIR/bin/pid ]
        then
            #强制启动，会忽略pid文件的存在， 适合程序异常退出后的重启，或者机器重启的场景
            if [ "$2" = "-f" ]
            then
                echo "ignore existed pid file"
                rm -rf $ROOT_DIR/bin/pid
            else
                echo "pid file already exist"
                exit 1
            fi
        fi
        export GOGC=200
        nohup $ROOT_DIR/bin/$APP -b $ROOT_DIR -r $mode 1>>$ROOT_DIR/logs/run.log 2>>$ROOT_DIR/logs/run.log &
        wait_for_pid $ROOT_DIR/bin/pid
        if [ 0 != $? ] 
        then
            echo "failed, please refer to logs/run.log for more detail"
            exit 1
        else
            echo "done"
        fi
        ;;

    stop)
        echo "stopping...."
        kill -9 `cat $ROOT_DIR/bin/pid`
        if [ 0 != $? ]
        then
            echo "failed"
            exit 1
        else
            rm -rf $ROOT_DIR/bin/pid
            echo "done"
        fi
        ;;

    restart)
        sh $0 stop
        echo "To start session in 2 seconds later..."
        sleep 2
        sh $0 start
        if [ $? != 0 ]
        then
            echo "failed"
            exit 1
        fi     
        ;;

    *)
        echo "Usage: $0 {start [-f]|stop|restart}"
        exit 1

        ;;
esac

exit 0

